name: Collect cluster stats

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    # Run every 15 minutes
    - cron: "*/15 * * * *"

jobs:
  collect-stats:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Install tools
        run: |
          bash -x tools/ci/install-hcloud.sh
      - name: Collect and store cluster and bfb status
        id: cluster_checks
        run: |
          export HCLOUD_TOKEN=${{ secrets.HCLOUD_TOKEN }}
          export QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}
          export QDRANT_CLUSTER_URL=${{ secrets.QDRANT_CLUSTER_URL }}
          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          export POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          bash -x tools/check-cluster-health.sh
          bash -x tools/collect-node-metrics.sh
      - uses: actions/upload-artifact@v4
        with:
          name: points-dump
          path: data/points-dump
          retention-days: 7
      - name: Fail job if any check failed
        if: steps.cluster_checks.outputs.failed == 'true'
        run: exit 1

  collect-stats-debug-cluster:
    env:
        check_secret: ${{ secrets.QDRANT_CLUSTER_URL_2 }}
    if: ${{ env.check_secret != '' }}
    needs: collect-stats
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Install tools
        run: |
          bash -x tools/ci/install-hcloud.sh
      - name: Collect and store cluster and bfb status
        id: cluster_checks
        run: |
          export HCLOUD_TOKEN=${{ secrets.HCLOUD_TOKEN }}
          export QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}
          export QDRANT_CLUSTER_URL=${{ secrets.QDRANT_CLUSTER_URL_2 }}
          export QC_NAME="qdrant-$(echo $QDRANT_CLUSTER_URL | sed -E 's~https://([^.]+)\..*~\1~')"          
          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          export POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          bash -x tools/check-cluster-health.sh
          bash -x tools/collect-node-metrics.sh
      - uses: actions/upload-artifact@v4
        with:
          name: points-dump
          path: data/points-dump
          retention-days: 7
      - name: Fail job if any check failed
        if: steps.cluster_checks.outputs.failed == 'true'
        run: exit 1